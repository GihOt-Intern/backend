// package com.server.game.mapper;

// import org.mapstruct.Mapping;
// import org.mapstruct.MappingTarget;
// import org.springframework.web.util.HtmlUtils;

// import com.server.game.dto.request.ChatRequest;
// import com.server.game.dto.response.ChatResponse;
// import com.server.game.model.ChatMessage;
// import com.server.game.model.ChatPrivateMessage;
// import com.server.game.protobuf.ChatPrivateRequest;
// import com.server.game.protobuf.ChatPrivateResponse;

// import java.util.Date;

// import org.mapstruct.AfterMapping;
// import org.mapstruct.Context;
// import org.mapstruct.Mapper;

// @Mapper(componentModel = "spring")
// public interface ChatMessageMapper { 

//     // Id is automatically generated by MongoDB, so we ignore it in the mapping
//     @Mapping(target = "id", ignore = true)
//     @Mapping(target = "timestamp", expression = "java(now())")
//     ChatMessage toChatMessage(ChatRequest chatRequest);

//     ChatResponse toChatResponse(ChatMessage chatMessage);
//     @AfterMapping
//     default void escapeHTML(@MappingTarget ChatResponse chatResponse) {
//         if (chatResponse.getContent() != null) {
//             chatResponse.setContent(HtmlUtils.htmlEscape(chatResponse.getContent()));
//         }
//     }


//     @Mapping(target = "id", ignore = true)
//     @Mapping(target = "timestamp", expression = "java(now())")
//     @Mapping(target = "content", expression = "java(escapeContent(chatPrivateRequest))")
//     ChatPrivateMessage toChatPrivateMessage(ChatPrivateRequest chatPrivateRequest);

    
//     default String escapeContent(ChatPrivateRequest chatPrivateRequest) {
//         return HtmlUtils.htmlEscape(chatPrivateRequest.getContent());
//     }

//     default Date now() {
//         return new Date();
//     }


//     // @Mapping(target = "senderName", ignore = true)
//     // ChatPrivateResponse toChatPrivateResponse(ChatPrivateMessage chatPrivateMessage, @Context String senderName);
//     // @AfterMapping
//     // default void setSenderName(@MappingTarget ChatPrivateResponse chatPrivateResponse, @Context String senderName) {
//     //     if (senderName != null) {
//     //         chatPrivateResponse.setSenderName(senderName);
//     //     }
//     // }


//     default ChatPrivateResponse toChatPrivateResponse(ChatPrivateMessage chatPrivateMessage, @Context String senderName) {
//         if (chatPrivateMessage == null) {
//             return null;
//         }
//         ChatPrivateResponse response = ChatPrivateResponse.newBuilder()
//                 .setId(chatPrivateMessage.getId())
//                 .setSenderName(senderName)
//                 .setSenderId(chatPrivateMessage.getSenderId())
//                 .setReceiverId(chatPrivateMessage.getReceiverId())
//                 .setContent(chatPrivateMessage.getContent())
//                 .setTimestamp(chatPrivateMessage.getTimestamp().getTime())
//                 .build();
//         return response;
//     }
// }